//@version=5
indicator(title='MyVolume V5.1.1', shorttitle='xHacim', format=format.volume, timeframe="")

myOpen = request.security(syminfo.tickerid, timeframe.period, open)
myClose = request.security(syminfo.tickerid, timeframe.period, close)
myVolume = request.security(syminfo.tickerid, timeframe.period, volume)


acHacimIsaretleri = input(defval = true, title = 'Hacim İşaretleri Gözüksün mü?', group="xHacim")   


//dema20
uzunluk = 20
d20 = ta.ema(myClose, uzunluk)
d21 = ta.ema(d20, uzunluk)
dema20 = 2 * d20 - d21

//ema9
ema9 = ta.ema(myClose, 9)

//wma30
wma30 = ta.wma(myClose, 30)


degerle(bas, bit, vol) =>

    myOrtalama = ta.sma(vol, 21)

    yonu = if(bas >= bit)
        0
    else
        1
    

    [degeri, rengi] = if vol <= myOrtalama
        //0
        [0, color.new(color.white, 30)]
    else
        if vol > myOrtalama and vol <= (myOrtalama * 2) 
            //1  //Volume
            [1, color.new(color.yellow, 0)]
        else
            if vol > (myOrtalama * 2) and vol <= (myOrtalama * 3) 
                //2 //2X 
                [2, color.new(#00bcd4, 0)]
            else
                if vol > (myOrtalama * 3) and vol <= (myOrtalama * 4) 
                    //3 //3X
                    [3, color.new(color.green, 0) ]
                else
                    //4 //3X+
                    [4, color.new(color.lime, 0)]
                    
    if yonu==0 
        rengi := color.new(color.red, 40)
                    
    [yonu, degeri, rengi]


dususDegerle(bas, bit, vol) =>

    myOrtalama = ta.sma(vol, 21)

    yonu = if(bas < bit)
        0
    else
        1
    

    [degeri, rengi] = if vol <= myOrtalama
        //0
        [0, color.new(color.white, 30)]
    else
        if vol < myOrtalama and vol <= (myOrtalama * 2) 
            //1  //Volume
            [1, color.new(color.yellow, 0)]
        else
            if vol < (myOrtalama * 2) and vol <= (myOrtalama * 3) 
                //2 //2X 
                [2, color.new(#00bcd4, 0)]
            else
                if vol < (myOrtalama * 3) and vol <= (myOrtalama * 4) 
                    //3 //3X
                    [3, color.new(color.green, 0) ]
                else
                    //4 //3X+
                    [4, color.new(color.lime, 0)]
                    
    if yonu==0 
        rengi := color.new(color.red, 40)
                    
    [yonu, degeri, rengi]


[yon, deger, renk] = degerle(myOpen, myClose, myVolume)
[yonD, degerD, renkD] = dususDegerle(myOpen, myClose, myVolume)


alertcondition(deger >= 1, title='Volume 1X+', message='Volume 1X+ {{ticker}}, FİYAT={{close}}')
alertcondition(deger == 1, title='Volume 1X', message='Volume 1X {{ticker}}, FİYAT={{close}}')
alertcondition(deger == 2, title='Volume 2X', message='Volume 2X {{ticker}}, FİYAT={{close}}')
alertcondition(deger >= 2, title='Volume 2X+', message='Volume 2X+ {{ticker}}, FİYAT={{close}}')
alertcondition(deger == 3, title='Volume 3X', message='Volume 3X {{ticker}}, FİYAT={{close}}')
alertcondition(deger == 4, title='Volume 3X+', message='Volume 3X+ {{ticker}}, FİYAT={{close}}')



alertcondition(yon== 1 and deger >= 1, title='Volume 1X+ AL', message='Volume 1X+ AL {{ticker}}, FİYAT={{close}}')
alertcondition(yon== 1 and deger == 1, title='Volume 1X AL', message='Volume 1X AL {{ticker}}, FİYAT={{close}}')
alertcondition(yon== 1 and deger == 2, title='Volume 2X AL', message='Volume 2X AL {{ticker}}, FİYAT={{close}}')
alertcondition(yon== 1 and deger >= 2, title='Volume 2X+ AL', message='Volume 2X+ AL {{ticker}}, FİYAT={{close}}')
alertcondition(yon== 1 and deger == 3, title='Volume 3X AL', message='Volume 3X AL {{ticker}}, FİYAT={{close}}')
alertcondition(yon== 1 and deger == 4, title='Volume 3X+ AL', message='Volume 3X+ AL {{ticker}}, FİYAT={{close}}')

alertcondition(yon== 0 and deger >= 1, title='Volume 1X+ SAT', message='Volume 1X+ SAT {{ticker}}, FİYAT={{close}}')
alertcondition(yon== 0 and deger == 1, title='Volume 1X SAT', message='Volume 1X SAT {{ticker}}, FİYAT={{close}}')
alertcondition(yon== 0 and deger == 2, title='Volume 2X SAT', message='Volume 2X SAT {{ticker}}, FİYAT={{close}}')
alertcondition(yon== 0 and deger >= 2, title='Volume 2X+ SAT', message='Volume 2X+ SAT {{ticker}}, FİYAT={{close}}')
alertcondition(yon== 0 and deger == 3, title='Volume 3X SAT', message='Volume 3X SAT {{ticker}}, FİYAT={{close}}')
alertcondition(yon== 0 and deger == 4, title='Volume 3X+ SAT', message='Volume 3X+ SAT {{ticker}}, FİYAT={{close}}')



gecmisEksi1 = if yon[1] == 0 and deger[1] > 0
    deger[1] 
else
    0
gecmisEksi2 = if yon[2] == 0 and deger[2] > 0
    deger[2] 
else
    0
gecmisEksi3 = if yon[3] == 0 and deger[3] > 0
    deger[3] 
else
    0
gecmisEksi4 = if yon[4] == 0 and deger[4] > 0
    deger[4] 
else
    0



dususDurumu = degerD > 0 and yonD > 0

myV1d = dususDurumu and dususDurumu[1] and dususDurumu[2]==false
plotshape(myV1d and acHacimIsaretleri ? myV1d : na  , title ='Hacim(-1x-1)', text='', style=shape.triangledown, location=location.bottom, color=color.new(color.yellow, 0), offset=0, size=size.tiny)
alertcondition(myV1d, title='Hacim(-1x-1)', message='Hacim(-1x-1) {{ticker}}, FİYAT={{close}}')

myV2d = dususDurumu and dususDurumu[1] and dususDurumu[2]==true and dususDurumu[3]==false
plotshape(myV2d and acHacimIsaretleri ? myV2d : na, title ='Hacim(-1x-2)', text='', style=shape.triangledown, location=location.bottom, color=color.new(color.orange, 0), offset=0, size=size.tiny)
alertcondition(myV2d, title='Hacim(-1x-2)', message='Hacim(-1x-2) {{ticker}}, FİYAT={{close}}')

myV3d = dususDurumu and dususDurumu[1] and dususDurumu[2]==true and dususDurumu[3]==true
plotshape(myV3d and acHacimIsaretleri ? myV3d : na, title ='Hacim(-1x-3)', text='', style=shape.triangledown, location=location.bottom, color=color.new(color.red, 0), offset=0, size=size.tiny)
alertcondition(myV3d, title='Hacim(-1x-3)', message='Hacim(-1x-3) {{ticker}}, FİYAT={{close}}')

alertcondition(myV1d or myV2d or myV3d, title='Hacim(-any)', message='Hacim(-any) {{ticker}}, FİYAT={{close}}')



yukselmeDurumu = deger > 0 and yon >0

myV1 = yukselmeDurumu and yukselmeDurumu[1] and yukselmeDurumu[2]==false
plotshape(myV1 and acHacimIsaretleri ? myV1 : na , title ='Hacim(1x1)', text='', style=shape.triangleup, location=location.top, color=color.new(color.yellow, 0), offset=0, size=size.tiny)
alertcondition(myV1, title='Hacim(1x1)', message='Hacim(1x1) {{ticker}}, FİYAT={{close}}')

myV2 = yukselmeDurumu and yukselmeDurumu[1] and yukselmeDurumu[2]==true and yukselmeDurumu[3]==false
plotshape(myV2 and acHacimIsaretleri ? myV2 : na, title ='Hacim(1x2)', text='', style=shape.triangleup, location=location.top, color=color.new(color.orange, 0), offset=0, size=size.tiny)
alertcondition(myV2, title='Hacim(1x2)', message='Hacim(1x2) {{ticker}}, FİYAT={{close}}')

myV3 = yukselmeDurumu and yukselmeDurumu[1] and yukselmeDurumu[2]==true and yukselmeDurumu[3]==true
plotshape(myV3 and acHacimIsaretleri ? myV3 : na, title ='Hacim(1x3)', text='', style=shape.triangleup, location=location.top, color=color.new(color.red, 0), offset=0, size=size.tiny)
alertcondition(myV3, title='Hacim(1x3)', message='Hacim(1x3) {{ticker}}, FİYAT={{close}}')

alertcondition(myV1 or myV2 or myV3, title='Hacim(any)', message='Hacim(any) {{ticker}}, FİYAT={{close}}')





sart3 =  (yon==1 and deger > 1) and (deger[1]==0 and deger[2]==0 and deger[3]==0 and deger[4]==0 and deger[5]==0 and deger[6]==0 )
sart1 =  yon==1 and deger > 1 and deger > deger[1] and deger > deger[2]  
sart2 = (not sart3) and  (yon==1 and deger > 0) and ((yon[1]==0 and deger[1] >= 0) or (yon[1]==1 and deger[1] == 0))



sartDemas = dema20 > dema20[1] // and close >= wma30 and ema9 >= wma30
renkDema20 = sartDemas ? color.lime : color.red

//plotshape(sart1, text='1\ns', style=shape.square, location=location.top, color=color.new(renkDema20, 0), offset=0, size=size.auto, title = 'Şart1')
//plotshape(sart2, text='2\ns', style=shape.square, location=location.top, color=color.new(renkDema20, 0), offset=0, size=size.auto, title = 'Şart2')
//plotshape(sart3, text='3\ns', style=shape.square, location=location.top, color=color.new(renkDema20, 0), offset=0, size=size.auto, title = 'Şart3')


sartlar = sart1 or sart2 or sart3    
alertcondition(sartlar, title='Sartlar AL', message='Sartlar AL {{ticker}}, FİYAT={{close}}')
alertcondition(sart1, title='Sart 1 AL', message='Sart1 AL {{ticker}}, FİYAT={{close}}')
alertcondition(sart1, title='Sart 2 AL', message='Sart2 AL {{ticker}}, FİYAT={{close}}')
alertcondition(sart1, title='Sart 3 AL', message='Sart3 AL {{ticker}}, FİYAT={{close}}')

//plotshape(deger == 0 and yon ==0, text='', style=shape.circle, location=location.bottom, color=color.new(color.red, 50), offset=0, size=size.auto, title = 'Ort Satıcı')
//plotshape(deger == 0 and yon ==1, text='', style=shape.circle, location=location.bottom, color=color.new(color.lime, 50), offset=0, size=size.auto, title = 'Ort Alıcı')



plotshape(deger == 1 and yon ==0 and acHacimIsaretleri ? deger == 1 and yon ==0 : na, text='1', style=shape.triangledown, location=location.bottom, color=color.new(color.red, 0), offset=0, size=size.auto)
plotshape(deger == 1 and yon ==1 and acHacimIsaretleri ? deger == 1 and yon ==1 : na, text='1', style=shape.triangleup, location=location.bottom, color=color.new(color.lime, 0), offset=0, size=size.auto)

plotshape(deger == 2 and yon ==0 and acHacimIsaretleri ? deger == 2 and yon ==0 : na, text='2', style=shape.triangledown, location=location.bottom, color=color.new(color.red, 0), offset=0, size=size.auto)
plotshape(deger == 2 and yon ==1 and acHacimIsaretleri ? deger == 2 and yon ==1 : na, text='2', style=shape.triangleup, location=location.bottom, color=color.new(color.lime, 0), offset=0, size=size.auto)

plotshape(deger == 3 and yon ==0 and acHacimIsaretleri ? deger == 3 and yon ==0 : na, text='3', style=shape.triangledown, location=location.bottom, color=color.new(color.red, 0), offset=0, size=size.auto)
plotshape(deger == 3 and yon ==1 and acHacimIsaretleri ? deger == 3 and yon ==1 : na, text='3', style=shape.triangleup, location=location.bottom, color=color.new(color.lime, 0), offset=0, size=size.auto)

plotshape(deger == 4 and yon ==0 and acHacimIsaretleri ? deger == 4 and yon ==0 : na, text='3+', style=shape.triangledown, location=location.bottom, color=color.new(color.red, 0), offset=0, size=size.auto)
plotshape(deger == 4 and yon ==1 and acHacimIsaretleri ? deger == 4 and yon ==1 : na, text='3+', style=shape.triangleup, location=location.bottom, color=color.new(color.lime, 0), offset=0, size=size.auto)


//OBV
var cumVol = 0.
cumVol += nz(volume)
if barstate.islast and cumVol == 0
    runtime.error("No volume is provided by the data vendor.")
obvsrc = close

acObvBolge = input(defval = false, title = 'OBV Bölgesi Gözüksün mü?', group="xOBV")   

acBolgeIsaretleri = input(defval = false, title = 'Bölge İşaretleri Gözüksün mü?', group="xCMF")   
acBolgeDetayi = input(defval = false, title = 'Bölge Detayı Gözüksün mü?', group="xCMF Detay")   


obv = ta.cum(math.sign(ta.change(obvsrc)) * volume)
//p1Color = acObvBolge ? color.lime : na
p1=plot(obv and acObvBolge and acBolgeDetayi==false ? obv : na, color=color.lime, title="OnBalanceVolume", linewidth=2)

ma(source, length, type) =>
    switch type
        "SMA" => ta.sma(source, length)
        "EMA" => ta.ema(source, length)
        "SMMA (RMA)" => ta.rma(source, length)
        "WMA" => ta.wma(source, length)
        "VWMA" => ta.vwma(source, length)

typeMA = input.string(title = "Method", defval = "SMA", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group="xOBV")
smoothingLength = input.int(title = "Length", defval = 5, minval = 1, maxval = 100, group="xOBV")

smoothingLine = ma(obv, smoothingLength, typeMA)
//p2Color = acObvBolge ? color.red : na
p2=plot(smoothingLine and acObvBolge and acBolgeDetayi==false ? smoothingLine : na , title="Smoothing Line", color=color.red, linewidth=2)



myBoya1 = obv >= smoothingLine ? color.lime : color.red 
myBoya = acObvBolge and acBolgeDetayi==false ? myBoya1 : na
fill(p1, p2 , title = 'Bölge', color = myBoya, fillgaps = true, transp=0)

//CMF


var cmfVol = 0.
cmfVol += nz(volume)
if barstate.islast and cmfVol == 0
    runtime.error("No volume is provided by the data vendor.")
cmflength = input.int(20, minval=1, group="xCMF",title = 'CMF Uzunluk')
ad = close==high and close==low or high==low ? 0 : ((2*close-low-high)/(high-low))*volume
mf = math.sum(ad, cmflength) / math.sum(volume, cmflength)

plot(mf and acBolgeDetayi ? mf : na, color=color.orange, title="MF",linewidth=3)


ustCizgi = input.float(0.1, "Üst Değer", minval=-0.0, maxval=0.4, step=0.01, group="xCMF")
altCizgi = input.float(-0.05, "Alt Değer", minval=-0.4, maxval=0.0, step=0.01, group="xCMF")



bolgeIsareti = mf > ustCizgi ? 1 : mf < altCizgi ? -1 : 0
plotshape(mf > ustCizgi and acBolgeIsaretleri ? mf > ustCizgi : na , title ='CMF Bölge İşaretleri', text='', style=shape.triangleup, location=location.top, color=color.new(color.lime, 0), offset=0, size=size.small)
plotshape(mf < altCizgi and acBolgeIsaretleri ? mf < altCizgi: na , title ='CMF Bölge İşaretleri', text='', style=shape.triangledown, location=location.top, color=color.new(color.red, 0), offset=0, size=size.small)


cTepe = input.color(color.new(color.lime, 100)  , "Tepe", group="xCMF Detay") 
uTepe = input.color(color.new(color.lime, 75)  , "Üst", group="xCMF Detay") 
aTepe = input.color(color.new(color.red, 75)  , "Alt", group="xCMF Detay") 
dTepe = input.color(color.new(color.red, 100)  , "Dip", group="xCMF Detay") 


ccTepe = acBolgeDetayi ? cTepe : na
cuTepe = acBolgeDetayi ? uTepe : na
caTepe = acBolgeDetayi ? aTepe : na
cdTepe = acBolgeDetayi ? dTepe : na

p01=hline(0.20 and acBolgeDetayi ? 0.2 : na, color=ccTepe, title="Tepe", linewidth=2, linestyle = hline.style_solid)
p11=hline(ustCizgi and acBolgeDetayi ? ustCizgi : na, color=cuTepe, title="Üst", linewidth=2, linestyle = hline.style_solid)
//hline(0, color=color.new(color.white,75), title="Orta", linewidth=2, linestyle = hline.style_solid)
p21=hline(altCizgi and acBolgeDetayi ? altCizgi : na, color=caTepe, title="Alt", linewidth=2, linestyle = hline.style_solid )
p31=hline(-0.20 and acBolgeDetayi ? -0.2 : na, color=cdTepe, title="Dip", linewidth=2, linestyle = hline.style_solid)

uBolge = input.color(color.new(color.lime, 50)  , "Üst Bölge", group="xCMF Detay") 
oBolge = input.color(color.new(color.white, 50)  , "Orta Bölge", group="xCMF Detay") 
aBolge = input.color(color.new(color.red, 50)  , "Alt Bölge", group="xCMF Detay") 

cuBolge = acBolgeDetayi ? uBolge : na
coBolge = acBolgeDetayi ? oBolge : na
caBolge = acBolgeDetayi ? aBolge : na

fill(p01, p11 , title = 'Üst Bölge', color = cuBolge, fillgaps = true, transp=50)
fill(p11, p21 , title = 'Orta Bölge', color = coBolge , fillgaps = true, transp=50)
fill(p21, p31, title = 'Alt Bölge', color = caBolge, fillgaps = true, transp=50)



//BURADA BİTTİ

